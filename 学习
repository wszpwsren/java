构造函数无返回值
构造函数在定义时不写返回值
构造函数可以直接声明（获取？）私有变量
但仍需写get/set方法
arraylist 使用基本类型时自动拆箱/自动装箱

继承成员变量
直接调用：看类名
间接调用：看方法所在类

局部变量：直接写
子类的成员变量：this.
父类的成员变量：super.

继承成员方法
优先子类，向上
1.重写（覆写）：继承关系中，方法名一样，参数列表也一样
创建的是子类对象，则优先用子类方法
//@override写在方法前(子类)，用来检测是不是有效的正确覆写
2.子类方法的 返回值 必须小于等于父类方法的返回值范围
3.子类方法的权限必须大于等于父类方法的权限修饰符
//public>protected>default(默认)>private

调用时
super.父类方法名（必须在子类方法中调用？）

构造方法的继承
1.子类构造方法中有一个隐含的super（）调用，即先父类构造，后子类构造
2.子类构造方法可以使用super调用父类的构造函数重载  

this
1.在本类的成员方法中，访问本类的成员变量（super调用父类）
2.在本类的成员方法中，访问本类的另一个成员方法
3.在本类的构造方法中，访问本类的另一个构造方法（仅一句）

子类[[super_class]]标记，指向父类

继承 特征：
1.java语言单继承（一个类的直接父类只能有一个）
2.java可以多级继承
3.父类可以有多个子类


抽象
父类方法不确定如何实现方法体，那么为抽象方法
public abstract void x（）；
抽象方法所在类必须是抽象类
public abstract class x{ }

抽象类不能直接new
需要使用子类继承抽象父类
子类必须覆写抽象父类中的所有抽象方法（实现）
1.子类去掉父类抽象方法中的abstract关键字，然后补上方法体括号
2.创建子类对象使用

注意事项：
1.抽象类不能创建对象
2.抽象类中可以有构造方法，是供子类创建对象时，初始化父类成员使用的
3.抽象类中，不一定包含抽象方法；有抽象方法的一定是抽象类
4.抽象类的子类，必须重写抽象父类的所有的抽象方法