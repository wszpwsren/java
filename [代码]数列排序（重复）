//add（Object）传递的为Object的地址，搞死了
//每次add new一个集合
//迭代器可以正常工作
//注意tempLL的清零顺序
//注意如何对res进行清零及逻辑

//tempLL(1)->temp->res(2)->tempLL clear->tempLL(2)->res clear ->next



public class Permutation {
    public static List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> res = new ArrayList<>();
        List<List<Integer>> tempLL = new ArrayList<>();
        List<Integer> temp = new ArrayList<>();
        List<Integer> temp1 = new ArrayList<>();
        temp.add(nums[0]);
        tempLL.add(new ArrayList<Integer>(temp));
        for (int j = 1; j < nums.length; j++) {
            Iterator<List<Integer>> iterator = tempLL.iterator();
            for (int i = 0; i < j; i++) {
                temp=iterator.next();
                for (int k = 0; k < j+1; k++) {
                    temp1.addAll(temp);
                    temp1.add(k,nums[j]);
                    res.add(new ArrayList<Integer>(temp1));
                    temp1.clear();
                }
            }
            tempLL.clear();
            tempLL.addAll(res);
            if(res.get(0).size()!=nums.length){
                res.clear();
            }
        }
        return res;
    }

    public static void main(String[] args) {
        System.out.println(permute(new int[]{1,2,3,4,5 }));

    }
